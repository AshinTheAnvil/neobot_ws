<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="rox">

  <xacro:macro name="gazebo_plugins">

    <gazebo reference="lidar_1_link">
      <sensor name="lidar_1_sensor" type="gpu_lidar">
        <always_on>true</always_on>
        <pose>0 0 0 0 0 0</pose>
        <visualize>false</visualize>
        <update_rate>10</update_rate>
        <topic>scan</topic>
        <!-- Set output to sensor_msgs/LaserScan to get same output type as gazebo_ros_laser -->
        <output_type>sensor_msgs/LaserScan</output_type>
        <gz_frame_id>lidar_1_link</gz_frame_id>
        <lidar>
          <scan>
            <horizontal>
              <samples>720</samples>
              <resolution>1</resolution>
              <min_angle>-1.48</min_angle>
              <max_angle>1.48</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.10</min>
            <max>30.0</max>
            <resolution>0.05</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <!-- Noise parameters based on published spec for Hokuyo laser
                    achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
                    stddev of 0.01m will put 99.7% of samples within 0.03m of the true
                    reading. -->
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </lidar>
      </sensor>
    </gazebo>

    <gazebo reference="lidar_2_link">
      <sensor name="lidar_2_sensor" type="gpu_lidar">
        <always_on>true</always_on>
        <pose>0 0 0 0 0 0</pose>
        <visualize>false</visualize>
        <update_rate>10</update_rate>
        <topic>scan2</topic>
        <!-- Set output to sensor_msgs/LaserScan to get same output type as gazebo_ros_laser -->
        <output_type>sensor_msgs/LaserScan</output_type>
        <gz_frame_id>lidar_2_link</gz_frame_id>
        <lidar>
          <scan>
            <horizontal>
              <samples>720</samples>
              <resolution>1</resolution>
              <min_angle>-1.48</min_angle>
              <max_angle>1.48</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.10</min>
            <max>30.0</max>
            <resolution>0.05</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <!-- Noise parameters based on published spec for Hokuyo laser
                    achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
                    stddev of 0.01m will put 99.7% of samples within 0.03m of the true
                    reading. -->
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </lidar>
      </sensor>
    </gazebo>

    <gazebo reference="imu_link">
        <sensor name="imu_sensor" type="imu">
            <gz_frame_id>imu_link</gz_frame_id>
            <update_rate>50</update_rate>
            <visualize>false</visualize>
            <topic>imu</topic>
            <always_on>true</always_on>
        </sensor>
    </gazebo>

    <gazebo reference="d435_camera_link">
      <sensor name="camera" type="rgbd_camera">
        <topic>camera</topic>
        <gz_frame_id>d435_camera_link</gz_frame_id>
        <update_rate>30.0</update_rate>
        <always_on>true</always_on>
        <visualize>true</visualize>
        <camera>
          <optical_frame_id>d435_camera_link</optical_frame_id>
          <!-- at 640×480 HFOV is 74 degrees -->
          <horizontal_fov>1.29154</horizontal_fov>
          <image>
            <!--VGA format-->
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.05</near>
            <far>100</far>
          </clip>
          <!--d435 min depth range is 0.175m at 640×480
           maximum range is ~10 m-->
          <depth_camera>
            <clip>
              <near>0.175</near>
              <far>10</far>
            </clip>
          </depth_camera>
          <noise>
            <type>gaussian</type>
            <mean>0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
      </sensor>
    </gazebo>

    <gazebo>

      <plugin filename="gz-sim-imu-system"
          name="gz::sim::systems::Imu">
      </plugin>

      <!-- For ArgoDrive platforms -->
      <xacro:if value="${rox_typ == 'argo' or rox_typ == 'argo-trio'}">
        <plugin filename="gz-sim-velocity-control-system"
            name="gz::sim::systems::VelocityControl">
            <topic>cmd_vel</topic>
        </plugin>
        <plugin filename="gz-sim-odometry-publisher-system"
            name="gz::sim::systems::OdometryPublisher">
            <odom_frame>odom</odom_frame> 
            <odom_covariance_topic>odom</odom_covariance_topic>
            <tf_topic>tf</tf_topic>
            <robot_base_frame>base_link</robot_base_frame>
            <odom_publish_frequency>50</odom_publish_frequency>
        </plugin>
      </xacro:if>

      <!-- DiffDrive control for trike and diff -->
      <xacro:if value="${rox_typ == 'diff' or rox_typ == 'trike'}">
        <plugin filename="gz-sim-diff-drive-system"
          name="gz::sim::systems::DiffDrive">
          <left_joint>wheel_left_joint</left_joint>
          <right_joint>wheel_right_joint</right_joint>
          <wheel_separation>${wheel_separation}</wheel_separation>
          <wheel_radius>0.075</wheel_radius>
          <max_linear_acceleration>1</max_linear_acceleration>
          <min_linear_acceleration>-1</min_linear_acceleration>
          <max_angular_acceleration>10.0</max_angular_acceleration>
          <min_angular_acceleration>-10.0</min_angular_acceleration>
          <max_linear_velocity>2.0</max_linear_velocity>
          <min_linear_velocity>-2.0</min_linear_velocity>
          <max_angular_velocity>10.0</max_angular_velocity>
          <min_angular_velocity>-10.0</min_angular_velocity>
          <topic>/cmd_vel</topic>
          <odom_topic>/odom</odom_topic>
          <tf_topic>/tf</tf_topic>
          <odom_publish_frequency>50</odom_publish_frequency>
        </plugin>

        <plugin
          filename="gz-sim-joint-state-publisher-system"
          name="gz::sim::systems::JointStatePublisher">
          <joint_name>wheel_left_joint</joint_name>
          <joint_name>wheel_right_joint</joint_name>
          <topic>joint_states</topic>
          <update_rate>30</update_rate>
        </plugin>

      </xacro:if>

      <plugin filename="gz-sim-sensors-system"
        name="gz::sim::systems::Sensors">
      </plugin>

    </gazebo>

    <!-- Gazebo macro for Argo Wheels -->
    <xacro:macro name="rox_argo_wheel_gazebo_macro" params="name">
      <gazebo reference="${name}_link">
        <mu1>0.001</mu1>
        <mu2>0.001</mu2>
        <kp>100000.0</kp>
        <kd>1.0</kd>
        <minDepth>0.000</minDepth>
        <fdir1>1 0 0</fdir1>
      </gazebo>
    </xacro:macro>

    <!-- Gazebo macro for Differential Castor Wheels -->
    <xacro:macro name="rox_caster_wheel_gazebo_macro" params="name">
      <gazebo reference="${name}_link">
        <mu1>0.001</mu1>
        <mu2>0.001</mu2>
      </gazebo>
    </xacro:macro>

    <!-- Gazebo macro for Differential Wheels -->
    <xacro:macro name="rox_diff_wheel_gazebo_macro" params="name">
      <gazebo reference="${name}_link">
        <mu1>1.0</mu1>
        <mu2>1.0</mu2>
        <kp>1000000.0</kp>
        <kd>1.0</kd>
        <minDepth>0.000</minDepth>
        <fdir1>1 0 0</fdir1>
      </gazebo>
    </xacro:macro>

    <!--Argo Drive-->
    <xacro:if value="${rox_typ == 'argo'}">
      <xacro:rox_argo_wheel_gazebo_macro name="wheel_front_left"/>
      <xacro:rox_argo_wheel_gazebo_macro name="wheel_front_right"/>
      <xacro:rox_argo_wheel_gazebo_macro name="wheel_back_left"/>
      <xacro:rox_argo_wheel_gazebo_macro name="wheel_back_right"/>
    </xacro:if>

    <!--Argo Trio Drive-->
    <xacro:if value="${rox_typ == 'argo-trio'}">
      <xacro:rox_argo_wheel_gazebo_macro name="wheel_front_left"/>
      <xacro:rox_argo_wheel_gazebo_macro name="wheel_front_right"/>
      <xacro:rox_argo_wheel_gazebo_macro name="wheel_back"/>
    </xacro:if>
    
    <!--Diff Drive-->
    <xacro:if value="${rox_typ == 'diff'}">
      <xacro:rox_diff_wheel_gazebo_macro name="wheel_left"/>
      <xacro:rox_diff_wheel_gazebo_macro name="wheel_right"/>
      <xacro:rox_caster_wheel_gazebo_macro name="caster_wheel_front_left"/>
      <xacro:rox_caster_wheel_gazebo_macro name="caster_wheel_front_right"/>
      <xacro:rox_caster_wheel_gazebo_macro name="caster_wheel_back_left"/>
      <xacro:rox_caster_wheel_gazebo_macro name="caster_wheel_back_right"/>
    </xacro:if>

    <!--Trike Drive-->
    <xacro:if value="${rox_typ == 'trike'}">
      <xacro:rox_diff_wheel_gazebo_macro name="wheel_left"/>
      <xacro:rox_diff_wheel_gazebo_macro name="wheel_right"/>
      <xacro:rox_caster_wheel_gazebo_macro name="caster_back"/>
    </xacro:if>

  </xacro:macro>

</robot>
